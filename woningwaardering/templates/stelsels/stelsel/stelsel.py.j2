import warnings
from datetime import date

from loguru import logger

from woningwaardering.stelsels import utils
from woningwaardering.stelsels._dev_utils import waardeer
from woningwaardering.stelsels.stelsel import Stelsel
from woningwaardering.stelsels.{{ stelsel.name }} import (
    {%- for stelselgroep, className in stelselgroepen %}
    {{ className }},
    {%- endfor %}
)
from woningwaardering.vera.bvg.generated import (
    EenhedenEenheid,
)
from woningwaardering.vera.referentiedata import (
    Woningwaarderingstelsel,
)


class {{ className }}(Stelsel):
    def __init__(self, peildatum: date = date.today()) -> None:
        super().__init__(
            stelsel={{ stelsel }},
            begindatum=date.fromisoformat("{{ begindatum }}"),
            einddatum=date.max,
            peildatum=peildatum,
            stelselgroepen=[
                {%- for stelselgroep, className in stelselgroepen %}
                {{ className }},
                {%- endfor %}
            ],
        )


if __name__ == "__main__":  # pragma: no cover
    waardeer(
        instance={{ className }}(),
        eenheid_input="tests/data/generiek/input/37101000032.json",
        strict=False,  # False is log warnings, True is raise warnings
        log_level="DEBUG",  # DEBUG, INFO, WARNING, ERROR
    )
